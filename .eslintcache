[{"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\index.js":"1","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\App.js":"2","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\pages\\Map.js":"3","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\pages\\TopTen.js":"4","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\pages\\Trend.js":"5","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\Map\\WorldMap.js":"6","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\Map\\Number.js":"7","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\Map\\Header.js":"8","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\Trend\\TrendTable.js":"9","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\Trend\\Header.js":"10","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\utils\\nameMap.js":"11","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\utils\\world.js":"12","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\pages\\EpidemicChange.js":"13","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\pages\\EpidemicChangeEchart.js":"14","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\Map\\ChinaMap.jsx":"15","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\utils\\china.js":"16","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\Echart\\china-left.js":"17","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\Map\\ChinaMapEchart.js":"18","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\pages\\PageChinaMap.js":"19","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\Map\\ChinaHeader.js":"20","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\Map\\ChinaNumber.js":"21","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\pages\\TrendChina.js":"22","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\pages\\News.jsx":"23","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\util\\Time.js":"24","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\News\\NewsList.jsx":"25","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\Trend\\TrendChina.jsx":"26","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\Trend\\TrendChinaEchart.js":"27","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\mock\\countryColors.js":"28","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\mock\\provinceColor.js":"29","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\api\\axiosMonth.js":"30","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\api\\config.js":"31","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\mock\\provincesName.js":"32","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\Trend\\LinerTrendChinaEchart.js":"33","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\api\\getSelectProvinceData.js":"34"},{"size":241,"mtime":1623001611957,"results":"35","hashOfConfig":"36"},{"size":1549,"mtime":1623222830157,"results":"37","hashOfConfig":"36"},{"size":598,"mtime":1623257814457,"results":"38","hashOfConfig":"36"},{"size":1906,"mtime":1623222831964,"results":"39","hashOfConfig":"36"},{"size":399,"mtime":1622890152726,"results":"40","hashOfConfig":"36"},{"size":3817,"mtime":1623257814397,"results":"41","hashOfConfig":"36"},{"size":1440,"mtime":1623222830242,"results":"42","hashOfConfig":"36"},{"size":396,"mtime":1622998281218,"results":"43","hashOfConfig":"36"},{"size":7720,"mtime":1623257814407,"results":"44","hashOfConfig":"36"},{"size":245,"mtime":1622887977311,"results":"45","hashOfConfig":"36"},{"size":6648,"mtime":1622633747471,"results":"46","hashOfConfig":"36"},{"size":147935,"mtime":1622633747473,"results":"47","hashOfConfig":"36"},{"size":3332,"mtime":1623292803342,"results":"48","hashOfConfig":"36"},{"size":5544,"mtime":1623293438426,"results":"49","hashOfConfig":"36"},{"size":3973,"mtime":1623257814376,"results":"50","hashOfConfig":"36"},{"size":62753,"mtime":1622920941076,"results":"51","hashOfConfig":"36"},{"size":1727,"mtime":1622948154846,"results":"52","hashOfConfig":"36"},{"size":2420,"mtime":1622952172061,"results":"53","hashOfConfig":"36"},{"size":596,"mtime":1623257814459,"results":"54","hashOfConfig":"36"},{"size":386,"mtime":1623257814375,"results":"55","hashOfConfig":"36"},{"size":1697,"mtime":1623257814377,"results":"56","hashOfConfig":"36"},{"size":453,"mtime":1623222831976,"results":"57","hashOfConfig":"36"},{"size":1030,"mtime":1623258042125,"results":"58","hashOfConfig":"36"},{"size":597,"mtime":1622988465025,"results":"59","hashOfConfig":"36"},{"size":1369,"mtime":1623257814398,"results":"60","hashOfConfig":"36"},{"size":3651,"mtime":1623288011216,"results":"61","hashOfConfig":"36"},{"size":1792,"mtime":1623222830262,"results":"62","hashOfConfig":"36"},{"size":509,"mtime":1623144132840,"results":"63","hashOfConfig":"36"},{"size":1029,"mtime":1623257814433,"results":"64","hashOfConfig":"36"},{"size":2602,"mtime":1623257814373,"results":"65","hashOfConfig":"36"},{"size":79,"mtime":1623222830201,"results":"66","hashOfConfig":"36"},{"size":565,"mtime":1623257814440,"results":"67","hashOfConfig":"36"},{"size":2600,"mtime":1623257814398,"results":"68","hashOfConfig":"36"},{"size":7935,"mtime":1623299238881,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"12shfu4",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\index.js",[],["144","145"],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\App.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\pages\\Map.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\pages\\TopTen.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\pages\\Trend.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\Map\\WorldMap.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\Map\\Number.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\Map\\Header.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\Trend\\TrendTable.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\Trend\\Header.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\utils\\nameMap.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\utils\\world.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\pages\\EpidemicChange.js",["146","147"],"import React, { useState, useEffect } from \"react\";\r\nimport { EpidemicChangeEchart } from \"./EpidemicChangeEchart.js\";\r\nimport {provincesName} from '../mock/provincesName'\r\nimport \"../styles/pages/EpidemicChange.less\";\r\nimport jsonData from  '../mock/china/ProvincesMonthData.json'\r\n\r\nexport default function EpidemicChange() {\r\n\r\n  const [settingIsShow, setSettingIsShow] = useState(null)  // 设置按钮隐藏和显示\r\n  const [dataSel, setDataSel] = useState(null);  // 选择的数据的类型\r\n  const [race, setRace] = useState(50000);  // 默认为50秒\r\n  const [provinceCount, setProvinceCount] = useState(10)\r\n\r\n  useEffect(() => {\r\n    getSelectData();\r\n    getRace();\r\n    getProvinceCount()\r\n    EpidemicChangeEchart(dataSel, race,provinceCount,jsonData.data);\r\n  }, [settingIsShow,dataSel, race, provinceCount]);\r\n\r\n\r\n  const getSelectData = () => {\r\n    let typeSelect = document.getElementById(\"dataSelect\");\r\n    const typeValue = typeSelect.options[typeSelect.selectedIndex].value; // 数据类型\r\n    //  console.log('getSelectData/typeValue<<', typeValue);\r\n    setDataSel(typeValue);\r\n    return typeValue;\r\n  };\r\n\r\n  const getRace = () => {\r\n    let typeSelect = document.getElementById(\"raceSelect\");\r\n    //  console.log('typeSelect<<',typeSelect)\r\n    const typeValue = typeSelect.options[typeSelect.selectedIndex].value; // 数据类型\r\n    //  console.log(\"getRace/typeValue<<\", typeValue);\r\n    setRace(typeValue);\r\n    return typeValue;\r\n  };\r\n  \r\n  const getProvinceCount = () => {\r\n    let typeSelect = document.getElementById(\"provinceCountSelect\");\r\n    //  console.log('typeSelect<<',typeSelect)\r\n    const typeValue = typeSelect.options[typeSelect.selectedIndex].value; // 数据类型\r\n     console.log(\"getProvinceCount/typeValue<<\", typeValue);\r\n    setProvinceCount(typeValue);\r\n    return typeValue;\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <header>中国各个省份疫情演变图</header>\r\n      <div className=\"settings\">setting\r\n        <div className=\"dataSel_box\">\r\n          {/* <label htmlFor=\"dataSelect\">数据选择</label>  */}\r\n          <select id=\"dataSelect\" onChange={() => getSelectData()}>\r\n            <option value={0}>选择数据</option>\r\n            <option value={0}>累计确诊</option>\r\n            <option value={1}>现有确诊</option>\r\n            <option value={2}>死亡人数</option>\r\n            <option value={3}>治愈人数</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"dataSel_box\">\r\n          <select id=\"raceSelect\" onChange={() => getRace()}>\r\n            <option value={5000}>1倍数</option>\r\n            <option value={2500}>2倍数</option>\r\n            <option value={1500}>3倍数</option>\r\n            <option value={1000}>4倍数</option>\r\n            <option value={500}>5倍数</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"dataSel_box\">\r\n          <select id=\"provinceCountSelect\" onChange={() => getProvinceCount()}>\r\n            <option value={10}>省份个数/10</option>\r\n            <option value={34}>全部</option>\r\n            <option value={10}>10</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: \"90rem\", margin: 0 }}>\r\n        <div id=\"container\" style={{ height: \"100%\", width: \"100%\" }}></div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\pages\\EpidemicChangeEchart.js",["148","149"],"\r\n/* 动态排序柱状图 */\r\nimport * as echarts from 'echarts';\r\nimport $ from 'jquery';\r\n\r\nimport {getAllMouthDate} from '../api/axiosMonth';\r\nimport { chinaProvinceColor } from '../mock/provinceColor';\r\n// import {countryColors} from '../mock/countryColors';\r\n\r\nexport const EpidemicChangeEchart = (dataSel,race,provinceCount,data) => {\r\n  \r\n  let dom = document.getElementById(\"container\");\r\n  let myChart = echarts.init(dom);\r\n\r\n  let option;\r\n  // 每隔update Frequency/1000 秒月份就加一\r\n  let updateFrequency = race || 50000;\r\n  const showRow = dataSel; // 选择展示哪一项数据\r\n  const showMax = provinceCount;\r\n\r\n\r\n  // const labApi = 'https://lab.isaaclin.cn'\r\n  $.when(\r\n    // $.getJSON('https://cdn.jsdelivr.net/npm/emoji-flags@1.3.0/data.json'),\r\n    // $.getJSON(ROOT_PATH + '/data/asset/data/life-expectancy-table.json'),\r\n    // $.getJSON(labApi+`/nCoV/api/news`),\r\n  ).done(function (res0, res1,res2) {\r\n      // console.log('flags<<\\n',res0[0],'\\ndata<<\\n',res1,'\\nres2<<\\n',res2[0]);\r\n    // console.log('res0Length<<',res0[0].length)\r\n    // console.log('res0Length<<',res1[0].length)\r\n    // console.log('res0Length<<',res2[0].length)\r\n    // let flags = res0[0];\r\n    let flags = chinaProvinceColor;\r\n    \r\n    // let data1 =  await getAllMouthDate() \r\n\r\n    // let data;\r\n/*     \r\n    async function getAllProvinceData() {\r\n      return await getAllMouthDate()\r\n      .then((res) => {\r\n        const data = res.data;\r\n        console.log('getAllMouthDate/then/data<<', data,  data.length);\r\n        console.log('Object.prototype.toString.call<<data<<', Object.prototype.toString.call(data));\r\n        const idx = 5;\r\n        console.log('data[0][idx]<<', data[0][idx]);\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        alert(err.message,'敢说我网络错误');\r\n      })\r\n    }\r\n    */\r\n    \r\n    // console.log('jsonData<<',jsonData)\r\n    // let data = jsonData.data;\r\n    console.log('Object.prototype.toString.call<<data<<', Object.prototype.toString.call(data));\r\n    console.log('data<<',data);\r\n\r\n\r\n    const dataMonthidx = 5;\r\n    let months = [];\r\n    // console.log('data[2]<<',data[2]);\r\n    for (let i = 0; i < data.length; ++i) {\r\n      if (months.length === 0 || months[months.length-1] !== data[i][dataMonthidx]) {\r\n        months.push(data[i][dataMonthidx]);\r\n      }\r\n    }\r\n     console.log('months<<',months)\r\n\r\n    function getFlag(provinceName) {\r\n      if (!provinceName) {\r\n        return 'none name';\r\n      }\r\n      \r\n      for (let index in flags) {\r\n        if (provinceName.toString() === index.toString()) {\r\n          return flags[index];\r\n        }\r\n      }\r\n    }\r\n    // 开始月份0代表第一个月份数据\r\n    let startIndex = 1;\r\n    let startMonth = months[startIndex];\r\n\r\n    let option = {\r\n      grid: {\r\n        top: 10,\r\n        bottom: 30,\r\n        left: 150,\r\n        right: 80\r\n      },\r\n      xAxis: {\r\n        max: 'dataMax',\r\n        label: {\r\n          formatter: function (n) {\r\n            return Math.round(n);\r\n          }\r\n        }\r\n      },\r\n      dataset: {\r\n        source: data.slice(1).filter(function (d) {\r\n          return d[dataMonthidx] === startMonth;\r\n        })\r\n      },\r\n      yAxis: {\r\n        type: 'category',\r\n        inverse: true,\r\n        max: showMax,\r\n        axisLabel: {\r\n          show: true,\r\n          textStyle: {\r\n            fontSize: 14\r\n          },\r\n          formatter: function (value) {\r\n            return value ;\r\n            // return value + '{flag|' + getFlag(value) + '}';\r\n          },\r\n          rich: {\r\n            flag: {\r\n              fontSize: 15,\r\n              padding: 5\r\n            }\r\n          }\r\n        },\r\n        animationDuration: 300,\r\n        animationDurationUpdate: 300\r\n      },\r\n      series: [{\r\n        realtimeSort: true,\r\n        seriesLayoutBy: 'column',\r\n        type: 'bar',\r\n        itemStyle: {\r\n          color: function (param) {\r\n            return chinaProvinceColor[param.value[4]] || '#5470c6';\r\n          }\r\n        },\r\n        encode: {\r\n          x: showRow,\r\n          y: 4\r\n        },\r\n        label: {\r\n          show: true,\r\n          precision: 1,\r\n          position: 'right',\r\n          valueAnimation: true,\r\n          fontFamily: 'monospace'\r\n        }\r\n      }],\r\n      // Disable init animation.\r\n      animationDuration: 0,\r\n      animationDurationUpdate: updateFrequency,\r\n      animationEasing: 'linear',\r\n      animationEasingUpdate: 'linear',\r\n      graphic: {\r\n        elements: [{\r\n          type: 'text',\r\n          right: 160,\r\n          bottom: 60,\r\n          style: {\r\n            text: startMonth,\r\n            font: 'bolder 32px monospace',\r\n            fill: '#7fff00'\r\n          },\r\n          z: 100\r\n        }]\r\n      }\r\n    };\r\n\r\n    // console.log(option);\r\n    myChart.setOption(option);\r\n\r\n    for (let i = startIndex; i < months.length - 1; ++i) {\r\n      (function (i) {\r\n        setTimeout(function () {\r\n          updateMonth(months[i + 1]);\r\n        }, (i - startIndex) * updateFrequency);\r\n      })(i);\r\n    }\r\n\r\n    function updateMonth(month) {\r\n      let source = data.slice(1).filter(function (d) {\r\n        return d[dataMonthidx] === month;\r\n      });\r\n      option.series[0].data = source;\r\n      option.graphic.elements[0].style.text = month;\r\n      myChart.setOption(option);\r\n    }\r\n  }).fail(function(error) {\r\n    console.log('获取数据失败了',error)\r\n  })\r\n\r\n  if (option && typeof option === 'object') {\r\n    myChart.setOption(option);\r\n  }\r\n  return () => {\r\n    // cleanup\r\n  };\r\n}","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\Map\\ChinaMap.jsx",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\utils\\china.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\Echart\\china-left.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\Map\\ChinaMapEchart.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\pages\\PageChinaMap.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\Map\\ChinaHeader.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\Map\\ChinaNumber.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\pages\\TrendChina.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\pages\\News.jsx",["150"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ShowNewsList from '../components/News/NewsList'\r\nimport jsonData from '../mock/news/newslist.json';\r\nexport default function News(props) {\r\n\r\n  const [newslist, setNewslist] = useState();\r\n  \r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect( async function () {\r\n    axios.get('/covid/news')\r\n      .then((response) => {\r\n         console.log('News/response.data<<', response.data)\r\n        const results = response.data.results;\r\n        setNewslist(results);\r\n         console.log('News<<',newslist)\r\n      })\r\n      .catch ((err) => {\r\n        console.log('newslist 获取失败',err)\r\n      })\r\n    // const results = jsonData.results;\r\n    // setNewslist(results);\r\n  },[newslist])\r\n  //  console.log('News<<',newslist)\r\n\r\n  return (\r\n    <>\r\n      <header>国内疫情最新新闻</header>\r\n      <div className=\"new-containter\">\r\n        <ShowNewsList propsNewslist={ newslist}/>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\util\\Time.js",[],["151","152"],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\News\\NewsList.jsx",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\Trend\\TrendChina.jsx",["153","154"],"import React, { useEffect, useState, useRef } from 'react'\r\n\r\nimport './TrendChina.less'\r\nimport {provincesName} from '../../mock/provincesName'\r\n\r\nimport { getTrendChinaEchart } from './TrendChinaEchart'\r\nimport { getLinerTrendChinaEchart } from './LinerTrendChinaEchart'\r\n\r\n\r\n\r\nimport { getProvincesData } from '../../api/getSelectProvinceData'\r\n\r\nimport {getSelectProvinceData} from '../../api/getSelectProvinceData'\r\n\r\n\r\nfunction TrendChina(props) {\r\n  const { chinaData } = props\r\n\r\n  const [dataType, setDataType] = useState('currentConfirmedCount');\r\n  const [provincename, setProvincename] = useState('china')\r\n\r\n  console.log('provincename<<',provincename)\r\n\r\n  // 下面是一个bug，表示require的参数不能是一个变量，否则加载不进来\r\n  // const chinaprovinceStr = '../../mock/china/' + provincename;\r\n  // const china = require(chinaprovinceStr);\r\n  // const china = require('../../mock/china/china');\r\n\r\n  \r\n  // const chinaMockData = china.data\r\n\r\n  // let chinaMockData = getSelectProvinceData()\r\n\r\n  let chinaMockData = getSelectProvinceData(provincename)\r\n\r\n  const selectRef = useRef(null);\r\n\r\n  const getSelectDOM = () => {\r\n\r\n    let typeSelect = document.getElementById(\"dataType_hsq\")\r\n    const selectIdx = typeSelect.selectedIndex;\r\n    //  console.log('selectIdx<<', selectIdx)\r\n    const typeValue = typeSelect.options[selectIdx].value; // 数据类型\r\n    //  console.log('getSelectDOM/typeValue<<', typeValue);\r\n    setDataType(typeValue)\r\n    return typeValue;\r\n  }\r\n  const getProvinces = () => {\r\n    let typeSelect = document.getElementById(\"provinceSelect\")\r\n    const typeValue = typeSelect.options[typeSelect.selectedIndex].value;\r\n    console.log('Object.prototype.toString.call(typeValue)<<', Object.prototype.toString.call(typeValue));\r\n    console.log(\"typeValue<<\",typeValue.toString());\r\n    setProvincename(typeValue)\r\n    return typeValue;\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getSelectDOM()\r\n    getProvinces()\r\n    // const typeValue = getSelectDOM()\r\n    // setDataType(typeValue)\r\n    //  console.log('useEffect/dataType<<',typeValue)\r\n    getTrendChinaEchart(chinaMockData, dataType);\r\n    // getLinerTrendChinaEchart();\r\n  }, [chinaData, chinaMockData, dataType,provincename])\r\n\r\n\r\n  const optionsNodes = provincesName.map(item => {\r\n    return (\r\n      <option key={item} value={item}>{item}</option>\r\n    )\r\n  })\r\n  return (\r\n    <div className='tendency_china' >\r\n      <div className=\"settings\">\r\n      <div className=\"dataSel_box\">\r\n          <select id=\"provinceSelect\" onChange={() => getProvinces()}>\r\n            <option value={'china'}>选择省份/中国</option>\r\n            {optionsNodes}\r\n          </select>\r\n        </div>\r\n        <div className=\"dataSelect\">\r\n          {/* <label htmlFor=\"dataType_hsq\" styles={{ fontSize:'1.5rem',color:'green'}}></label> */}\r\n          <select ref={selectRef} id=\"dataType_hsq\"\r\n            onChange={() => getSelectDOM()}\r\n          >\r\n            <option value=\"currentConfirmedCount\">选择数据</option>\r\n            <option value=\"confirmedCount\">累计确诊</option>\r\n            <option value=\"curedCount\">治愈人数</option>\r\n            <option value=\"currentConfirmedCount\">现有确诊</option>\r\n            <option value=\"deadCount\">死亡人数</option>\r\n            <option value=\"suspectedCount\">疑似病例</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div id='china_dataShow' >\r\n        <header>china_dataShow</header>\r\n      </div>\r\n      <div id='LinerTrendChinaEchart' >\r\n        <header>LinerTrendChinaEchart</header>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TrendChina\r\n","G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\Trend\\TrendChinaEchart.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\mock\\countryColors.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\mock\\provinceColor.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\api\\axiosMonth.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\api\\config.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\mock\\provincesName.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\components\\Trend\\LinerTrendChinaEchart.js",[],"G:\\Study\\Code\\Web\\DataVisualization\\covid_19\\src\\api\\getSelectProvinceData.js",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":3,"column":9,"nodeType":"161","messageId":"162","endLine":3,"endColumn":22},{"ruleId":"159","severity":1,"message":"163","line":9,"column":25,"nodeType":"161","messageId":"162","endLine":9,"endColumn":41},{"ruleId":"159","severity":1,"message":"164","line":6,"column":9,"nodeType":"161","messageId":"162","endLine":6,"endColumn":24},{"ruleId":"159","severity":1,"message":"165","line":71,"column":14,"nodeType":"161","messageId":"162","endLine":71,"endColumn":21},{"ruleId":"159","severity":1,"message":"166","line":4,"column":8,"nodeType":"161","messageId":"162","endLine":4,"endColumn":16},{"ruleId":"155","replacedBy":"167"},{"ruleId":"157","replacedBy":"168"},{"ruleId":"159","severity":1,"message":"169","line":7,"column":10,"nodeType":"161","messageId":"162","endLine":7,"endColumn":34},{"ruleId":"159","severity":1,"message":"170","line":11,"column":10,"nodeType":"161","messageId":"162","endLine":11,"endColumn":26},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'provincesName' is defined but never used.","Identifier","unusedVar","'setSettingIsShow' is assigned a value but never used.","'getAllMouthDate' is defined but never used.","'getFlag' is defined but never used.","'jsonData' is defined but never used.",["171"],["172"],"'getLinerTrendChinaEchart' is defined but never used.","'getProvincesData' is defined but never used.","no-global-assign","no-unsafe-negation"]